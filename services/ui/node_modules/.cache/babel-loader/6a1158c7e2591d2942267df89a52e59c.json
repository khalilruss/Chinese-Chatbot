{"ast":null,"code":"var _jsxFileName = \"/home/khalil/FYP_website/react_ui/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport 'react-chatbox-component/dist/style.css';\nimport React, { useState, useEffect } from \"react\";\nimport { ChatBox } from 'react-chatbox-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const CHATBOT_AVATAR_URL = \"https://images.idgesg.net/images/article/2018/02/artificial_intelligence_ai_virtual_assistant_robot_chatbot_thinkstock_856909876-100749925-large.jpg\";\n  const USER_AVATAR_URL = \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f9/OOjs_UI_icon_userAvatar-constructive.svg/1024px-OOjs_UI_icon_userAvatar-constructive.svg.png\";\n  const [messageHistory, setMessageHistory] = useState([]);\n  const [ws, setWs] = useState(null);\n  const currnetUser = {\n    \"uid\": \"user1\"\n  };\n  useEffect(() => {\n    let ws = new WebSocket(\"ws://localhost:8000/bot\");\n\n    ws.onopen = () => {\n      console.log(\"connected websocket main component\");\n      setWs(ws);\n    };\n\n    ws.onclose = e => {\n      console.log('Socket is closed.', e.reason);\n    };\n  }, []);\n\n  if (ws) {\n    ws.onmessage = event => {\n      let botMsg = createFullMessage(event.data, 'chatbot', 'chatbot1', CHATBOT_AVATAR_URL);\n      updateChat(botMsg);\n    };\n  }\n\n  const createFullMessage = (text, name, uid, avatar_url) => {\n    return {\n      \"text\": text,\n      \"id\": messageHistory.length + 1,\n      \"sender\": {\n        \"name\": name,\n        \"uid\": uid,\n        \"avatar\": avatar_url\n      }\n    };\n  };\n\n  const submitMessage = (text, name, uid, avatar_url) => {\n    if (ws) {\n      ws.send(text);\n      let userMsg = createFullMessage(text, name, uid, avatar_url);\n      updateChat(userMsg);\n    }\n  };\n\n  const updateChat = msg => {\n    let newMessageHistory = messageHistory.concat([msg]);\n    setMessageHistory(newMessageHistory);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chinese Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_items_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Grammar Breakdown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: /*#__PURE__*/_jsxDEV(ChatBox, {\n          style: {\n            width: '100%'\n          },\n          messages: messageHistory,\n          onSubmit: newMsg => submitMessage(newMsg, 'currentUser', \"user1\", USER_AVATAR_URL),\n          isLoading: ws == null || ws.readyState == WebSocket.CLOSED,\n          user: currnetUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Word Breakdown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cBU89YxCkhNKccNn7mKnW2K/cJc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/khalil/FYP_website/react_ui/src/App.js"],"names":["React","useState","useEffect","ChatBox","App","CHATBOT_AVATAR_URL","USER_AVATAR_URL","messageHistory","setMessageHistory","ws","setWs","currnetUser","WebSocket","onopen","console","log","onclose","e","reason","onmessage","event","botMsg","createFullMessage","data","updateChat","text","name","uid","avatar_url","length","submitMessage","send","userMsg","msg","newMessageHistory","concat","width","newMsg","readyState","CLOSED"],"mappings":"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","sourcesContent":["import './App.css';\nimport 'react-chatbox-component/dist/style.css';\nimport React, { useState, useEffect } from \"react\";\nimport { ChatBox } from 'react-chatbox-component';\n\nfunction App() {\n  const CHATBOT_AVATAR_URL = \"https://images.idgesg.net/images/article/2018/02/artificial_intelligence_ai_virtual_assistant_robot_chatbot_thinkstock_856909876-100749925-large.jpg\"\n  const USER_AVATAR_URL = \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f9/OOjs_UI_icon_userAvatar-constructive.svg/1024px-OOjs_UI_icon_userAvatar-constructive.svg.png\"\n  const [messageHistory, setMessageHistory] = useState([])\n  const [ws, setWs] = useState(null)\n  const currnetUser = {\n    \"uid\": \"user1\"\n  }\n\n  useEffect(() => {\n    let ws = new WebSocket(\"ws://localhost:8000/bot\");\n    ws.onopen = () => {\n      console.log(\"connected websocket main component\");\n      setWs(ws)\n    };\n    ws.onclose = e => {\n      console.log(\n        'Socket is closed.', e.reason\n      );\n    }\n  }, [])\n\n  if (ws) {\n    ws.onmessage = (event) => {\n      let botMsg = createFullMessage(event.data, 'chatbot', 'chatbot1', CHATBOT_AVATAR_URL)\n      updateChat(botMsg)\n    };\n  }\n\n  const createFullMessage = (text, name, uid, avatar_url) => {\n    return {\n      \"text\": text,\n      \"id\": messageHistory.length + 1,\n      \"sender\": {\n        \"name\": name,\n        \"uid\": uid,\n        \"avatar\": avatar_url,\n      },\n    }\n  }\n\n  const submitMessage = (text, name, uid, avatar_url) => {\n    if (ws) {\n      ws.send(text)\n      let userMsg = createFullMessage(text, name, uid, avatar_url)\n      updateChat(userMsg)\n    }\n  }\n\n  const updateChat = (msg) => {\n    let newMessageHistory = messageHistory.concat([msg])\n    setMessageHistory(newMessageHistory)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Chinese Chatbot</h1>\n      <div className='main_items_container'>\n        <div className='box'>\n          <h2>Grammar Breakdown</h2>\n        </div>\n        <div className={\"box\"}>\n          <ChatBox\n          style={{width:'100%'}}\n            messages={messageHistory}\n            onSubmit={(newMsg) => submitMessage(newMsg, 'currentUser', \"user1\", USER_AVATAR_URL)}\n            isLoading={ws == null || ws.readyState == WebSocket.CLOSED}\n            user={currnetUser} />\n        </div>\n        <div className='box'>\n          <h2>Word Breakdown</h2>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}