{"ast":null,"code":"var _jsxFileName = \"/home/khalil/FYP_website/react_ui/src/components/Register/Register.js\",\n    _s = $RefreshSig$();\n\nimport './Register.css';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Logo, Form, Input, Button, Error, Success } from '../AuthForm';\nimport logoImg from \"../../assets/logo.png\";\nimport { postRegister } from '../../api-client';\nimport validator from 'validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [errorText, setErrorText] = useState(\"\");\n  const [successText, setSuccessText] = useState(\"\");\n  const [fullname, setFullname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const register = () => {\n    if (fullname != \"\" && email != \"\" && username != \"\" && password != \"\" && confirmPassword != \"\") {\n      if (validator.isEmail(email)) {\n        if (password === confirmPassword) {\n          postRegister(fullname, username, email, password, setErrorText, setSuccessText);\n        } else {\n          setErrorText('The passwords you entered do not match');\n        }\n      } else {\n        setErrorText('Please enter a valid email');\n      }\n    } else {\n      setErrorText('Please complete all of the fields');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {\n        src: logoImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"fullname\",\n          value: fullname,\n          onChange: e => {\n            setFullname(e.target.value);\n          },\n          placeholder: \"Fullname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"username\",\n          value: username,\n          onChange: e => {\n            setUsername(e.target.value);\n          },\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          value: email,\n          onChange: e => {\n            setEmail(e.target.value);\n          },\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          value: password,\n          onChange: e => {\n            setPassword(e.target.value);\n          },\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => {\n            setConfirmPassword(e.target.value);\n          },\n          placeholder: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => register(),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Already have an account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), errorText != \"\" && setSuccessText(\"\") && /*#__PURE__*/_jsxDEV(Error, {\n        children: errorText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 48\n      }, this), successText != \"\" && setErrorText(\"\") && /*#__PURE__*/_jsxDEV(Success, {\n        children: successText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Register, \"fN3z6hDULdizcEXOnfXxQuFs4Kw=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/khalil/FYP_website/react_ui/src/components/Register/Register.js"],"names":["React","useState","Link","Card","Logo","Form","Input","Button","Error","Success","logoImg","postRegister","validator","Register","errorText","setErrorText","successText","setSuccessText","fullname","setFullname","email","setEmail","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","register","isEmail","e","target","value"],"mappings":"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","sourcesContent":["import './Register.css'\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Logo, Form, Input, Button, Error, Success} from '../AuthForm';\nimport logoImg from \"../../assets/logo.png\";\nimport { postRegister } from '../../api-client';\nimport validator from 'validator'\n\nconst Register = ()=> {\n    const [errorText, setErrorText]= useState(\"\")\n    const [successText, setSuccessText]= useState(\"\")\n    const [fullname, setFullname] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    const register = () =>{\n        if (\n            fullname!=\"\" &&\n            email!=\"\" &&\n            username!=\"\" &&\n            password!=\"\" &&\n            confirmPassword !=\"\"\n          ){\n            if(validator.isEmail(email)){\n                if (password === confirmPassword) {\n                    postRegister(fullname,username,email,password, setErrorText, setSuccessText);\n                }else{\n                    setErrorText('The passwords you entered do not match');\n                }\n            }else{\n                setErrorText('Please enter a valid email');  \n            }\n          }else{\n              setErrorText('Please complete all of the fields')\n          }\n      \n        \n    }\n  return(\n  <div className=\"register-wrapper\">\n    <Card>\n        <Logo src={logoImg} />\n        <Form>\n            <Input \n                type=\"fullname\" \n                value={fullname}\n                onChange={e => {\n                setFullname(e.target.value);\n                }}\n                placeholder=\"Fullname\"\n            />\n            <Input\n                type=\"username\"\n                value={username}\n                onChange={e => {\n                setUsername(e.target.value);\n                }}\n                placeholder=\"Username\" \n            />\n            <Input \n                type=\"email\" \n                value={email}\n                onChange={e => {\n                setEmail(e.target.value);\n                }}\n                placeholder=\"Email\" \n            />\n            <Input \n                type=\"password\" \n                value={password}\n                onChange={e => {\n                setPassword(e.target.value);\n                }}\n                placeholder=\"Password\" \n            />\n            <Input \n                type=\"password\" \n                value={confirmPassword}\n                onChange={e => {\n                setConfirmPassword(e.target.value);\n                }}\n                placeholder=\"Confirm Password\" \n            />\n            <Button onClick={()=>register()}>Register</Button>\n        </Form>\n        <Link to=\"/\">Already have an account?</Link>\n        { errorText!=\"\" &&setSuccessText(\"\") &&<Error>{errorText}</Error> }\n        { successText!=\"\" && setErrorText(\"\")&&<Success>{successText}</Success> }\n    </Card>\n  </div>\n  )\n}\n\nexport default Register"]},"metadata":{},"sourceType":"module"}