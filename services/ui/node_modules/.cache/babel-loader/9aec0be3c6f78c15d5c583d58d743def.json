{"ast":null,"code":"var _jsxFileName = \"/home/khalil/FYP_website/react_ui/src/components/Register/Register.js\",\n    _s = $RefreshSig$();\n\nimport './Register.css';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Logo, Form, Input, Button, Error, Success } from '../AuthForm';\nimport logoImg from \"../../assets/logo.png\";\nimport validator from 'validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [errorText, setErrorText] = useState(\"\");\n  const [successText, setSuccessText] = useState(\"\");\n  const [fullname, setFullname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const register = () => {\n    if (fullname != \"\" && email != \"\" && username != \"\" && password != \"\" && confirmPassword != \"\") {\n      if (validator.isEmail(email)) {\n        if (password === confirmPassword) {} else {\n          setErrorText('The passwords you entered do not match');\n        }\n      } else {\n        setErrorText('Please enter a valid email');\n      }\n    } else {\n      setErrorText('Please complete all of the fields');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {\n      src: logoImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"fullname\",\n        value: fullname,\n        onChange: e => {\n          setFullname(e.target.value);\n        },\n        placeholder: \"Fullname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"username\",\n        value: username,\n        onChange: e => {\n          setUsername(e.target.value);\n        },\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        value: email,\n        onChange: e => {\n          setEmail(e.target.value);\n        },\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        value: password,\n        onChange: e => {\n          setPassword(e.target.value);\n        },\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        value: confirmPassword,\n        onChange: e => {\n          setConfirmPassword(e.target.value);\n        },\n        placeholder: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => register(),\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Already have an account?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), errorText != \"\" && setSuccessText(\"\") && /*#__PURE__*/_jsxDEV(Error, {\n      children: errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 46\n    }, this), successText != \"\" && setErrorText(\"\") && /*#__PURE__*/_jsxDEV(Success, {\n      children: successText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 46\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"fN3z6hDULdizcEXOnfXxQuFs4Kw=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/khalil/FYP_website/react_ui/src/components/Register/Register.js"],"names":["React","useState","Link","Card","Logo","Form","Input","Button","Error","Success","logoImg","validator","Register","errorText","setErrorText","successText","setSuccessText","fullname","setFullname","email","setEmail","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","register","isEmail","e","target","value"],"mappings":"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","sourcesContent":["import './Register.css'\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Logo, Form, Input, Button, Error, Success} from '../AuthForm';\nimport logoImg from \"../../assets/logo.png\";\nimport validator from 'validator'\n\nconst Register = ()=> {\n    const [errorText, setErrorText]= useState(\"\")\n    const [successText, setSuccessText]= useState(\"\")\n    const [fullname, setFullname] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    const register = () =>{\n        if (\n            fullname!=\"\" &&\n            email!=\"\" &&\n            username!=\"\" &&\n            password!=\"\" &&\n            confirmPassword !=\"\"\n          ){\n            if(validator.isEmail(email)){\n                if (password === confirmPassword) {\n\n                }else{\n                    setErrorText('The passwords you entered do not match');\n                }\n            }else{\n                setErrorText('Please enter a valid email');  \n            }\n          }else{\n              setErrorText('Please complete all of the fields')\n          }\n      \n        \n    }\n  return(\n    <Card>\n      <Logo src={logoImg} />\n      <Form>\n        <Input \n            type=\"fullname\" \n            value={fullname}\n            onChange={e => {\n            setFullname(e.target.value);\n            }}\n            placeholder=\"Fullname\"\n        />\n        <Input\n            type=\"username\"\n            value={username}\n            onChange={e => {\n            setUsername(e.target.value);\n            }}\n            placeholder=\"Username\" \n        />\n        <Input \n            type=\"email\" \n            value={email}\n            onChange={e => {\n            setEmail(e.target.value);\n            }}\n            placeholder=\"Email\" \n        />\n        <Input \n            type=\"password\" \n            value={password}\n            onChange={e => {\n            setPassword(e.target.value);\n            }}\n            placeholder=\"Password\" \n        />\n        <Input \n            type=\"password\" \n            value={confirmPassword}\n            onChange={e => {\n            setConfirmPassword(e.target.value);\n            }}\n            placeholder=\"Confirm Password\" \n        />\n        <Button onClick={()=>register()}>Register</Button>\n      </Form>\n      <Link to=\"/\">Already have an account?</Link>\n      { errorText!=\"\" &&setSuccessText(\"\") &&<Error>{errorText}</Error> }\n      { successText!=\"\" && setErrorText(\"\")&&<Success>{successText}</Success> }\n    </Card>\n  )\n}\n\nexport default Register"]},"metadata":{},"sourceType":"module"}